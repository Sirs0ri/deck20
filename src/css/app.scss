// app global css in SCSS form
@use "sass:color";

@font-face {
  font-family: Atkinson-Hyperlegible;
  src: url(./fonts/AtkinsonHyperlegible-Regular.ttf);
}
@font-face {
  font-family: Atkinson-Hyperlegible;
  src: url(./fonts/AtkinsonHyperlegible-Bold.ttf);
  font-weight: bold;
}
@font-face {
  font-family: Atkinson-Hyperlegible;
  src: url(./fonts/AtkinsonHyperlegible-Italic.ttf);
  font-style: italic;
}
@font-face {
  font-family: Atkinson-Hyperlegible;
  src: url(./fonts/AtkinsonHyperlegible-BoldItalic.ttf);
  font-weight: bold;
  font-style: italic;
}

:root {
  --primary-h: #{color.hue($primary)};
  --primary-s: #{color.saturation($primary)};
  --primary-l: #{color.lightness($primary)};
  --primary-hsl: var(--primary-h) var(--primary-s) var(--primary-l);
}

html, body, #q-app, .q-layout, .q-page-container {
  height: 100%;
}

body {
  font-family: Atkinson-Hyperlegible;
  text-rendering: optimizeSpeed;
}

.q-btn {
  font-size: 1em;
}

.page-wrapper {
  // This will sit between the .q-page-container and the .q-page inside it,
  // filling all available space between header and footer.
  // It'll make sure the content scroll between the app-bars, while also
  // ustilizing scrollbar-gutter to prevent layout shifts.
  height: 100%;
  overflow: auto;
  position: relative;
}

/* Icons are non-filled by default */
.material-symbols-rounded {
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 48
}

.bg-glassed {
  backdrop-filter: blur(3px);
}

.bg-glassed,
.bg-active-primary {
  background: rgba(white, 0.8);
  transition: box-shadow 200ms;
  
  &:focus-within {
    // background: rgba(color.mix(white, $primary, 97%), 0.8);
    box-shadow: inset 0px 0px 100px hsla(var(--primary-hsl) / 0.03);
  }
}

.bg-primary {
  background: hsl(var(--primary-hsl)) !important;
}

.sticky-top {
  position: sticky;
  top: 0;
  z-index: 1;
}

.q-timeline__entry {

  &.no-subtitle .q-timeline__subtitle{
    display: none;
  }
  &.no-title .q-timeline__title{
    display: none;
  }
}

/* For exceptions, put them in a container with this class: */
.icon-md-filled.material-symbols-rounded,
.icon-md-filled .material-symbols-rounded {
  font-variation-settings:
    'FILL' 1,
    'wght' 400,
    'GRAD' 0,
    'opsz' 48
}

.q-toggle {
  .q-toggle__inner {

    // defaults for .q-toggle__inner--falsy
    .q-toggle__track {
      box-shadow: 0 0 0px 7px currentColor;
      outline-width: 2px;
      outline-style: solid;
      outline-offset: 5px;

      // Dynamic values
      outline-color: black;
      opacity: 0.38;
    
      transition: 
        color 0.22s cubic-bezier(0.4, 0, 0.2, 1), 
        outline-color 0.22s cubic-bezier(0.4, 0, 0.2, 1), 
        opacity 0.22s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .q-toggle__thumb {
      transform: scale(0.8);

      transition:
        transform 0.22s cubic-bezier(0.4, 0, 0.2, 1),
        // Part of Quasars CSS, don't overwrite it
        left 0.22s cubic-bezier(0.4, 0, 0.2, 1);
      
      &:after {
        box-shadow: none;
        background-color: rgba(0, 0, 0, 0.38);
        transition: background-color 0.22s cubic-bezier(0.4, 0, 0.2, 1);
      }
    }

    // Overrides for .q-toggle__inner--truthy
    &--truthy {
      color: hsla(var(--primary-hsl) / 1);

      .q-toggle__track {
        outline-color: currentColor;
        opacity: 1;
      }

      .q-toggle__thumb {
        transform: scale(1);

        &:after {
          background-color: white;
        }

        .q-icon {
          // Revert to the toggle's primary, instead of white
          color: unset;
          // Make Icon more visible
          font-weight: bold;
        }
      }
    }
  }
}

/* Consistent stylig for FABs and Header list items */
.q-fab>.q-btn,
.q-btn--fab,
.header-item {
  border-radius: 16px;
  color: hsla(var(--primary-hsl) / 1);
}

.q-fab>.q-btn,
.q-btn--fab {
  background-color: white;

  &::before {
    background-color: hsla(var(--primary-hsl) / 0.1) !important;
  }
}
.q-fab .q-btn__content {
  color: hsla(var(--primary-hsl) / 1);
}
.header-item {
  border-radius: 16px;
  background-color: hsla(var(--primary-hsl) / 0.1) !important;
  color: hsla(var(--primary-hsl) / 1);
}
.q-fab__actions>.q-btn {
  border-radius: 12px;
}

.header-item {
  width: 100%;
  padding-top: map-get($space-md, "y");
  padding-bottom: map-get($space-md, "y");
}

.q-field__control {
  color: hsla(var(--primary-hsl) / 1);
}

.text-primary {
  color: hsla(var(--primary-hsl) / 1) !important;
}

/* Animations, use them with <Transition> elements, usign the name attribute */

.fadeScale-enter-active,
.fadeScale-leave-active {
  transition: scale 200ms, opacity 170ms;
}
.fadeScale-leave-active {
  position: absolute;
}

.fadeScale-enter-from,
.fadeScale-leave-to {
  opacity: 0;
  transform: scale(0.9);
}

@keyframes kf-color-mix {
  0% { background-color: white }
  100% { background-color: hsla(var(--primary-hsl) / 1) }
}