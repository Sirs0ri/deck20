// app global css in SCSS form

html, body, #q-app, .q-layout, .q-page-container {
  height: 100%;
}

.page-wrapper {
  // This will sit between the .q-page-container and the .q-page inside it,
  // filling all available space between header and footer.
  // It'll make sure the content scroll between the app-bars, while also
  // ustilizing scrollbar-gutter to prevent layout shifts.
  height: 100%;
  overflow: auto;
  position: relative;
}

/* Icons are non-filled by default */
.material-symbols-rounded {
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 48
}

.bg-glassed {
  backdrop-filter: blur(3px);
  background: rgba(white, 0.8);
}

/* For exceptions, put them in a container with this class: */
.icon-md-filled.material-symbols-rounded,
.icon-md-filled .material-symbols-rounded {
  font-variation-settings:
    'FILL' 1,
    'wght' 400,
    'GRAD' 0,
    'opsz' 48
}

.q-toggle {
  .q-toggle__inner {

    // defaults for .q-toggle__inner--falsy
    .q-toggle__track {
      box-shadow: 0 0 0px 7px currentColor;
      outline-width: 2px;
      outline-style: solid;
      outline-offset: 5px;

      // Dynamic values
      outline-color: black;
      opacity: 0.38;
    
      transition: 
        color 0.22s cubic-bezier(0.4, 0, 0.2, 1), 
        outline-color 0.22s cubic-bezier(0.4, 0, 0.2, 1), 
        opacity 0.22s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .q-toggle__thumb {
      transform: scale(0.8);

      transition:
        transform 0.22s cubic-bezier(0.4, 0, 0.2, 1),
        // Part of Quasars CSS, don't overwrite it
        left 0.22s cubic-bezier(0.4, 0, 0.2, 1);
      
      &:after {
        box-shadow: none;
        background-color: rgba(0, 0, 0, 0.38);
        transition: background-color 0.22s cubic-bezier(0.4, 0, 0.2, 1);
      }
    }

    // Overrides for .q-toggle__inner--truthy
    &--truthy {
      .q-toggle__track {
        outline-color: currentColor;
        opacity: 1;
      }

      .q-toggle__thumb {
        transform: scale(1);

        &:after {
          background-color: white;
        }

        .q-icon {
          // Revert to the toggle's primary, instead of white
          color: unset;
          // Make Icon more visible
          font-weight: bold;
        }
      }
    }
  }
}

/* Consistent stylig for FABs and Header list items */
.q-fab>.q-btn,
.q-btn--fab,
.header-item {
  border-radius: 16px;
  color: $primary;
}

.q-fab>.q-btn,
.q-btn--fab {
  background-color: white;

  &::before {
    background-color: rgba($primary, 0.1) !important;
  }
}
.header-item {
  border-radius: 16px;
  background-color: rgba($primary, 0.1) !important;
  color: $primary;
}
.q-fab__actions>.q-btn {
  border-radius: 12px;
}

.header-item {
  width: 100%;
  padding-top: map-get($space-md, "y");
  padding-bottom: map-get($space-md, "y");
}

/* Animations, use them with <Transition> elements, usign the name attribute */

.fadeScale-enter-active,
.fadeScale-leave-active {
  transition: scale 200ms, opacity 170ms;
}
.fadeScale-leave-active {
  position: absolute;
}

.fadeScale-enter-from,
.fadeScale-leave-to {
  opacity: 0;
  transform: scale(0.9);
}
